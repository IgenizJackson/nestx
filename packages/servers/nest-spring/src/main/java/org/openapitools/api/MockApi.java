/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (3.3.4).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2019-05-14T08:00:41.276Z[Etc/UTC]")

@Validated
@Api(value = "mock", description = "the mock API")
public interface MockApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    @ApiOperation(value = "", nickname = "mockInitData", notes = "", response = Boolean.class, tags={ "mock", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Ok", response = Boolean.class) })
    @RequestMapping(value = "/mock/init",
        produces = { "text/html" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Boolean> mockInitData() {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "", nickname = "mockReset", notes = "", response = Boolean.class, tags={ "mock", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Ok", response = Boolean.class) })
    @RequestMapping(value = "/mock/reset",
        produces = { "text/html" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Boolean> mockReset() {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
